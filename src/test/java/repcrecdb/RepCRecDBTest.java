/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package repcrecdb;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;

class RepCRecDBTest {
    @Test void testInitialization() {
        TransactionManager tm = RepCRecDB.init();
        assertEquals(tm.dms.size(), 10);
        for (DataManager dm : tm.dms) {
            assertTrue(dm.isUp);
        }
    }

    @Test void testInstrRead() {
        TransactionManager tm = RepCRecDB.init();
        String instructions = "begin(T1)\nbeginRO(T2)\n";
        InputStream is = new ByteArrayInputStream(instructions.getBytes(StandardCharsets.UTF_8));
        tm.run(is);
        assertEquals(tm.transactions.size(), 2);
        Transaction t1 = tm.transactions.get("T1");
        assertNotNull(t1);
        assertEquals(t1.name, "T1");
        assertFalse(t1.isReadOnly);
        Transaction t2 = tm.transactions.get("T2");
        assertNotNull(t2);
        assertEquals(t2.name, "T2");
        assertTrue(t2.isReadOnly);
        assertTrue(t1.beginTime < t2.beginTime);
    }

    @Test void testInstrFail() {
        TransactionManager tm = RepCRecDB.init();
        String instructions = "fail(0)\nfail(2)";
        InputStream is = new ByteArrayInputStream(instructions.getBytes(StandardCharsets.UTF_8));
        DataManager dm0 = tm.dms.get(0);
        DataManager dm2 = tm.dms.get(2);
        dm0.lockTable.put("x2", new LockEntry(LockType.READ ,"T1"));
        dm2.lockTable.put("x4", new LockEntry(LockType.WRITE ,"T2"));
        
        tm.run(is);
        assertFalse(dm0.isUp);
        assertEquals(dm0.lockTable.size(), 0);
        assertFalse(dm2.isUp);
        assertEquals(dm2.lockTable.size(), 0);
    }
}
